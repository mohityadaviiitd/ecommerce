# Generated by Django 3.2.7 on 2021-11-05 02:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import estore.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('user_name', models.CharField(max_length=90)),
                ('email', models.EmailField(max_length=90, unique=True, verbose_name='email')),
                ('phone', models.CharField(max_length=90, unique=True)),
                ('is_phone_verified', models.BooleanField(default=0)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('cart_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('profile_photo', models.ImageField(blank=True, default=estore.models.default_profile_photo, null=True, upload_to=estore.models.get_profile_photo)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_seller', models.BooleanField(default=False)),
                ('wishlist_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('active', models.BooleanField(default=1)),
                ('deleted', models.BooleanField(default=0)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('product_name', models.CharField(max_length=1000)),
                ('details', models.CharField(blank=True, max_length=4000, null=True)),
                ('category', models.CharField(max_length=90)),
                ('price', models.FloatField()),
                ('stock', models.IntegerField()),
                ('status', models.CharField(max_length=90)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
            ],
            options={
                'db_table': 'products',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='estore.products')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'wishlist',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('address_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('house_no', models.CharField(max_length=90)),
                ('address_line1', models.CharField(max_length=400)),
                ('address_line2', models.CharField(blank=True, max_length=400, null=True)),
                ('landmark', models.CharField(blank=True, max_length=400, null=True)),
                ('city_village_name', models.CharField(max_length=90)),
                ('state', models.CharField(max_length=90)),
                ('pincode', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_address',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sellers',
            fields=[
                ('seller_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to=estore.models.get_pdf)),
                ('approval_status', models.BooleanField(default=False)),
                ('gst_number', models.CharField(max_length=90, unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sellers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Returns',
            fields=[
                ('return_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='estore.products')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'returns',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='products',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='estore.sellers'),
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('image_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=estore.models.get_product_photo)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='estore.products')),
            ],
            options={
                'db_table': 'product_images',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DelliverablePincodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pincode', models.IntegerField()),
                ('no_of_days_to_deliver', models.IntegerField()),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='estore.sellers')),
            ],
            options={
                'db_table': 'delliverable_pincodes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Checkouts',
            fields=[
                ('checkout_id', models.CharField(max_length=90, primary_key=True, serialize=False)),
                ('delivery_status', models.CharField(max_length=90)),
                ('shipping_address_id', models.CharField(max_length=90)),
                ('expected_date', models.DateTimeField()),
                ('ordered_date', models.DateTimeField()),
                ('kart', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'checkouts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='estore.products')),
            ],
            options={
                'db_table': 'cart',
                'managed': True,
            },
        ),
    ]
